#include <Arduino.h>

#include <Arduino_GFX_Library.h>

static const uint8_t st7701_my_init_operations[] = {
    BEGIN_WRITE,
    WRITE_COMMAND_8,
    0xFF,
    WRITE_BYTES,
    5,
    0x77,
    0x01,
    0x00,
    0x00,
    0x13,

    WRITE_C8_D8,
    0xEF,
    0x08,

    // PAGE1
    WRITE_COMMAND_8,
    0xFF,
    WRITE_BYTES,
    5,
    0x77,
    0x01,
    0x00,
    0x00,
    0x10, // Command2_BK0

    WRITE_C8_D16,
    0xC0,
    0x4F,
    0x00,
    WRITE_C8_D16,
    0xC1, // Porch Control
    0x10, // VBP[7:0]: Back-Porch Vertical line setting for display. 
    0x02, // VFP[7:0]: Front-Porch Vertical line setting for display.
    WRITE_C8_D16,
    0xC2,
    0x07, // NLINV[2:0] = 7 -> Column
    0x02, // RTNI[4:0]

    WRITE_C8_D8,
    0xCC,
    0x10,

    WRITE_C8_D8,
    0x3A,
    0x70, // Interface Pixel Format: 0x70 RGB888, 0x60 RGB666, 0x50 RGB565


    WRITE_COMMAND_8,
    0xB0, // Positive Voltage Gamma Control
    WRITE_BYTES,
    16,
    0x00,
    0x10,
    0x17,
    0x0D,
    0x11,
    0x06,
    0x05,
    0x08,
    0x07,
    0x1F,
    0x04,
    0x11,
    0x0E,
    0x29,
    0x30,
    0x1F,

    WRITE_COMMAND_8,
    0xB1, // Negative Voltage Gamma Control
    WRITE_BYTES,
    16,
    0x00,
    0x0D,
    0x14,
    0x0E,
    0x11,
    0x06,
    0x04,
    0x08,
    0x08,
    0x20,
    0x05,
    0x13,
    0x13,
    0x26,
    0x30,
    0x1F,

    // PAGE1
    WRITE_COMMAND_8,
    0xFF,
    WRITE_BYTES,
    5,
    0x77,
    0x01,
    0x00,
    0x00,
    0x11, // BKSEL = 1 -> Command2_BK1

    WRITE_C8_D8,
    0xB0,
    0x65, // Vop=4.8, 3.5375+(VRHA[7:0]x0.0125)
    WRITE_C8_D8,
    0xB1,
    // 0x82, // VCOM=32, 0.1+(VCOM[7:0] x 0.0125) = 1.725
    0x82, // VCOM=32, 0.1+(VCOM[7:0] x 0.0125) = 1.725
    WRITE_C8_D8,
    0xB2,
    0x82, // VGH=12.5v
    WRITE_C8_D8,
    0xB3,
    0x80,
    WRITE_C8_D8,
    0xB5,
    0x42, // VGL=-10.17v
    WRITE_C8_D8,
    0xB7,
    0x85,
    WRITE_C8_D8,
    0xB8,
    0x20, // AVDD=6.6 & AVCL=-4.6
    WRITE_C8_D8,
    0xC1,
    0x78,
    WRITE_C8_D8,
    0xC2,
    0x78,

    WRITE_C8_D8,
    0xD0,
    0x88,
    WRITE_C8_D8,
    0xEE,
    0x42,

    WRITE_COMMAND_8,
    0xE0,
    WRITE_BYTES,
    3,
    0x00,
    0x00,
    0x02,

    WRITE_COMMAND_8,
    0xE1,
    WRITE_BYTES,
    11,
    0x04,
    0xA0,
    0x06,
    0xA0,
    0x05,
    0xA0,
    0x07,
    0xA0,
    0x00,
    0x44,
    0x44,

    WRITE_COMMAND_8,
    0xE2,
    WRITE_BYTES,
    12,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,

    WRITE_COMMAND_8,
    0xE3,
    WRITE_BYTES,
    4,
    0x00,
    0x00,
    0x22,
    0x22,

    WRITE_C8_D16,
    0xE4,
    0x44,
    0x44,

    WRITE_COMMAND_8,
    0xE5,
    WRITE_BYTES,
    16,
    0x0C,
    0x90,
    0xA0,
    0xA0,
    0x0E,
    0x92,
    0xA0,
    0xA0,
    0x08,
    0x8C,
    0xA0,
    0xA0,
    0x0A,
    0x8E,
    0xA0,
    0xA0,

    WRITE_COMMAND_8,
    0xE6,
    WRITE_BYTES,
    4,
    0x00,
    0x00,
    0x22,
    0x22,

    WRITE_C8_D16,
    0xE7,
    0x44,
    0x44,

    WRITE_COMMAND_8,
    0xE8,
    WRITE_BYTES,
    16,
    0x0D,
    0x91,
    0xA0,
    0xA0,
    0x0F,
    0x93,
    0xA0,
    0xA0,
    0x09,
    0x8D,
    0xA0,
    0xA0,
    0x0B,
    0x8F,
    0xA0,
    0xA0,

    WRITE_COMMAND_8,
    0xEB,
    WRITE_BYTES,
    7,
    0x00,
    0x00,
    0xE4,
    0xE4,
    0x44,
    0x00,
    0x40,

    WRITE_COMMAND_8,
    0xED,
    WRITE_BYTES,
    16,
    0xFF,
    0xF5,
    0x47,
    0x6F,
    0x0B,
    0xA1,
    0xAB,
    0xFF,
    0xFF,
    0xBA,
    0x1A,
    0xB0,
    0xF6,
    0x74,
    0x5F,
    0xFF,

    WRITE_COMMAND_8,
    0xEF,
    WRITE_BYTES,
    6,
    0x08,
    0x08,
    0x08,
    0x40,
    0x3F,
    0x64,

    // WRITE_C8_D8, 0xE5, 0xE4,

    WRITE_COMMAND_8,
    0xFF,
    WRITE_BYTES,
    5,
    0x77,
    0x01,
    0x00,
    0x00,
    0x00,

    //-----------VAP & VAN---------------
    WRITE_COMMAND_8,
    0xFF,
    WRITE_BYTES,
    5,
    0x77,
    0x01,
    0x00,
    0x00,
    0x13,

    WRITE_C8_D8,
    0xE6,
    0x16,
    WRITE_C8_D16,
    0xE8,
    0x00,
    0x0E,

    WRITE_COMMAND_8,
    0xFF,
    WRITE_BYTES,
    5,
    0x77,
    0x01,
    0x00,
    0x00,
    0x00,

    // WRITE_COMMAND_8, 0x21,   // 0x20 normal, 0x21 IPS
    // WRITE_C8_D8, 0x3A, 0x60, // 0x70 RGB888, 0x60 RGB666, 0x50 RGB565

    WRITE_COMMAND_8,
    0x11, // Sleep Out -> turns off sleep mode
    END_WRITE,

    DELAY,
    120,

    BEGIN_WRITE,
    WRITE_COMMAND_8,
    0xFF,
    WRITE_BYTES,
    5,
    0x77,
    0x01,
    0x00,
    0x00,
    0x13,
    END_WRITE,

    BEGIN_WRITE,
    WRITE_C8_D16,
    0xE8,
    0x00,
    0x0C,
    END_WRITE,

    DELAY,
    10,

    BEGIN_WRITE,
    WRITE_C8_D16,
    0xE8,
    0x00,
    0x00,
    WRITE_COMMAND_8,
    0xFF,
    WRITE_BYTES,
    5,
    0x77,
    0x01,
    0x00,
    0x00,
    0x00,
    WRITE_COMMAND_8,
    0x29, // Display On


    WRITE_COMMAND_8,
    0x29, // Display On
    WRITE_C8_D8,
    0x36,
    0x08, // BGR

    WRITE_C8_D8,
    0x35,
    0x10, // TE OFF

    END_WRITE,
};

